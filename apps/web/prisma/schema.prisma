// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model users {
  id String @id @unique @default(cuid())

  username    String @unique
  displayname String
  email       String @unique
  password    String

  created DateTime @default(now())
  updated DateTime @updatedAt

  session  sessions[]
  usermeta usermetas[]
  post     posts[]
}

model sessions {
  id        String   @id @unique
  user_id   String
  expiresAt DateTime

  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model usermetas {
  id String @id @unique @default(cuid())

  user_id String
  user    users  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  key   String
  value String
}

model posts {
  id String @id @unique @default(cuid())

  title       String
  slug        String @unique
  author_id   String
  author      users  @relation(fields: [author_id], references: [id], onDelete: Cascade)
  post_type   String
  post_status String

  created DateTime @default(now())
  updated DateTime @updatedAt

  postmeta postmetas[]
}

model postmetas {
  id String @id @unique @default(cuid())

  post_id String
  post    posts  @relation(fields: [post_id], references: [id], onDelete: Cascade)

  key   String
  value String
}

model options {
  id String @id @unique @default(cuid())

  option_name  String
  option_value String
  autoload     Boolean @default(false)
}
